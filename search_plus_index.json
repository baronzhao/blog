{"./":{"url":"./","title":"写在首页","keywords":"","body":"关于我 赵国勇，英文名: Baron Zhao。 软件工程师，开发经理，编程语言Java，敏捷开发。 现居中国杭州。 声明 本站点所有内容均为个人观点，不代表本人雇主或其他任何团体。 版权 Attribution 4.0 International (CC BY 4.0) 署名 4.0 国际 (CC BY 4.0) "},"202001-big-plans-in-2020.html":{"url":"202001-big-plans-in-2020.html","title":"新年计划","keywords":"","body":"Big Plans in 2020 健身，体重控制到65~70kg之间，并保持 写作，每月不少于2篇博客~~ 英语，完成6个月的英语流利说，并拿回499奖学金 阅读，每月至少阅读1本书 阅读目录 音频目录 一月执行情况 开启了新一轮的英语流利说，继续刷口语 计划与变化 尽量做正确的计划而不是做忙碌的计划。在正确计划的前提下，把那些变化当做必不可少的惊喜和点缀，这可能也是做人的一种情怀。 "},"tech/":{"url":"tech/","title":"技术杂谈","keywords":"","body":"技术杂谈 此目录下的文章包含以下某几种特性： 技术相关的 随手记录的 未经整理的 不成体系的 "},"tech/201901-markdown-rules.html":{"url":"tech/201901-markdown-rules.html","title":"Markdown语法","keywords":"","body":"Markdown语法 需要转义的字符 \\\\ 反斜杠 \\ \\` 反引号 ` \\* 星号 * \\_ 下划线 _ \\{\\} 大括号 {} \\[\\] 中括号 [] \\(\\) 小括号 () \\# 井号 # \\+ 加号 + \\- 减号 - \\. 英文句号 . \\! 感叹号 ! "},"tech/201901-easy-scrum-tour-1.html":{"url":"tech/201901-easy-scrum-tour-1.html","title":"轻松Scrum之旅1","keywords":"","body":"关于这本书 《轻松Scrum之旅》是一本阅读友好的技术书，作者给我们讲述了在一个项目中使用敏捷开发方法管理四次迭代的故事，将技术穿插在故事中，通过抛出问题，解决的方法，层层推进，让读者有种参与在其中的感觉。当然，由于这本书写的比较早，书中的有些工具已经过时，但是书中介绍敏捷开发的各种概念、实践和解决问题的思路依旧有宝贵的借鉴意义，作为入门书籍，还是不错的。 世上充满无数的选择和努力，但对于成功，选择大于努力。敏捷开发是一种选择。 什么是敏捷开发？ 敏捷开发是一种开发方法学（Methodology），可以应对客户快速变更的需求。它强调以人为核心，采用迭代的方式，循序渐进地开发软件。在敏捷开发过程中，软件项目被划分成多个相互联系但也能独立运行的子项目。这就使得每个子项目在开发、测试直至完成的过程中一直保持可使用的状态。这个过程实际上就是要形成开发过程中团队之成员之间更加有效的合作关系，使其灵活性更高，以适应不断变化的需求。敏捷开发过程与传统开发过程的最大的不同之处在于，在敏捷开发过程中，团队是有激情、有活力的，能够适应更大的变化，生产出更高质量的软件。 软件开发中优先级最高的事情是给客户提供有价值的、可以工作的软件，因此软件开发最重要的是给客户创造价值。 敏捷的价值观： 个体和交互重于过程和工具 人是软件开发中最重要的因素，人与人面对面的交流，是最有效、最迅速的交换信息的方式。 可以工作的软件重于面面俱到的文档 敏捷方法认为最根本的文档就是源码。 客户协作重于合同谈判 开发团队和客户之间真诚的协作，加上频繁的客户反馈，才能让项目走向成功。 随时响应变化重于循规蹈矩 随时响应变化的能力往往决定着一个项目的成败。敏捷方法欢迎并且随时准备应对变化。为保障敏捷团队成员更好的聚焦开发，不应该对当前迭代周期的需求进行变化。 敏捷开发方法的核心思想概括起来就是“适应变化”和“以人为本”。敏捷开发方法是面向人的而非面向过程的。敏捷开发方法是“主动适应的”而不是“预先设定的”。 敏捷开发的理念就是信任开发团队能够很好地完成任务，所有的管理都是围绕这个理念展开的。 敏捷开发的本质，第一是一切活动以价值为导向，第二是以人为本。以价值为导向可以帮助我们大大提高软件开发的效益，以人为本的精神可以帮助我们大大提高软件开发的效率。 敏捷开发也需要文档，也同样要计划。但不值得在这些因素上花费过多的资源，可工作的软件才是敏捷方法关注的重点。 敏捷开发不是可以解决所有问题的银弹。在实际的项目中，敏捷并不要求你们一成不变地遵循这些条条框框，遇到困难时应该灵活地调整策略，这样才真正达到了敏捷的目的。 什么是Scrum？ Scrum 是一种敏捷开发方法，目前是世界上最流行的敏捷开发方法。 其他的敏捷开发方法有：极限编程（eXtreme Programming，XP）、RUP（Rational Unify Process，Ratioanl 统一过程）、 Lean（精益软件开发方法） Scrum 是一种灵活的敏捷软件开发管理过程，由 Ken Schwaber 和 Jeff Sutherland 提出，这个名词来源于英式橄榄球。 对于那些功能需求可能经常发生变化的项目来说，Scrum 是最为理想的选择之一。 Scrum中的三种角色（Roles） 产品负责人（PO: Product Owner） 需要确定产品的功能和完成时间，并对产品的收益负责，要根据市场需求确定产品功能的优先级。 在每个 Sprint 开始之前，Product Owner 可以修改功能需求和优先级。 有权决定接受或否决各个 Sprint 的工作成果。 通常由市场部门的人员或开发部门内部主要使用该产品人员来担任。 敏捷教练（SM: Scrum Master) 负责监督整个 Scrum 项目进程，调整项目计划。 确保开发团队成员的能力能够胜任产品的开发。 促进团队中不同角色的成员间充分交流和沟通，并负责为项目的进行扫除障碍。 保证开发团队不受外力的干扰和阻挠。 掌握产品开发进度，参与每日 Scrum 会议、Sprint 计划会议和 Sprint 评审会议。 敏捷团队（Scrum Team） 一般由 5～10 个能全职工作的成员组成较为理想。 团队成员横跨各个职能，通常包含开发、测试、文档设计人员等。 Scrum的三种工件（Artifacts） 产品功能列表（Product Backlog） 冲刺列表（Sprint Backlog） 燃尽图（Burn-DownChart） Scrum的四种会议/仪式（Ceremonies） 迭代计划会议（Sprint Planning Meeting） 迭代评审会议（Sprint Review Meeting） 迭代回顾会议（Sprint Retrospective Meeting） 每日站会（Daily Scrum Meeting） Scrum的流程 首先要将所有需要完成的工作列在一个 Product Backlog 中，项目开发过程中需求的改变也要写进去。在每个 Sprint 开始之前，要召开一个 Sprint 计划会议。在这个会上，产品责任人（Product Owner） 为 Product Backlog 中的各项功能需求确定优先级。随后，Scrum 开发团队按照优先级，从 Product Backlog 中挑选出他们认为能在这个 Sprint 中完成的任务，并把这些任务从 Product Backlog 中挪到 Sprint Backlog 中去。在 Sprint 的进行过程中，Scrum 团队每天都要举行一个简短的每日 Scrum 会议，以便团队成员了解开发进度。一个 Sprint 结束之后，需要召开 Sprint 评审会议和 Sprint 回顾会议。开发团队在 Sprint 评审会议上把这个 Sprint 的开发成果展示给大家。而在 Sprint 回顾会议上，团队成员们会回顾刚刚过去的这个 Sprint，从中总结经验和教训。 "},"tech/202001-java-kaptcha.html":{"url":"tech/202001-java-kaptcha.html","title":"验证码组件Kaptcha","keywords":"","body":"Google Kaptcha 验证码组件 Kaptcha 是谷歌开源的非常实用的验证码生成工具，基于SimpleCaptcha的开源项目。使用 Kaptcha 生成验证码十分简单并且参数可以进行自定义。只需添加jar包配置下就可以使用，通过配置，可以自己定义验证码大小、颜色、显示的字符等等。 其原理是使用java.awt.Graphics2D实现绘图功能: new一个BufferedImage。new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB); 基于此BufferedImage创建一个绘图对象，即使用 createGraphics 方法，得 Graphics2D 实例。 使用Graphics2D 实例进行画图，所有绘图坐标基于创建此Graphics2D 的BufferedImage。 调用Graphics2D 对象的 dispose() 方法，进行绘图处理，使绘图效果应用到BufferedImage 对象。 下面就来讲一下如何使用kaptcha生成验证码以及在服务器端取出验证码进行校验。 Spring项目使用Kaptcha肯定要依赖kaptcha的jar，maven项目的话直接加入如下依赖 com.github.penggle kaptcha 2.3.2 进一步了解bean配置，可以参考官方wiki：https://code.google.com/archive/p/kaptcha/wikis 参考文件备份：HowToUse、SpringUsage、ConfigParameters、FrequentlyAskedQuestions 进一步了解SpringBoot集成Kaptcha，可以参考开源项目README: https://gitee.com/baomidou/kaptcha-spring-boot-starter 简单快速集成 Google Kaptcha验证码 如何使用 引入 kaptcha-datasource-spring-boot-starter。 com.baomidou kaptcha-spring-boot-starter ${version} 在Controller使用Kaptcha。 @RestController @RequestMapping(\"/kaptcha\") public class KaptchaController { @Autowired private Kaptcha kaptcha; @GetMapping(\"/render\") public void render() { kaptcha.render(); } @PostMapping(\"/valid\") public void validDefaultTime(@RequestParam String code) { //default timeout 900 seconds kaptcha.validate(code); } @PostMapping(\"/validTime\") public void validCustomTime(@RequestParam String code) { kaptcha.validate(code, 60); } } 发生错误会抛出异常，建议使用全局异常来处理。 KaptchaException //super Exception KaptchaIncorrectException KaptchaNotFoundException KaptchaTimeoutException KaptchaRenderException //If something is wrong then Image.write when render. import com.baomidou.kaptcha.exception.KaptchaException; import com.baomidou.kaptcha.exception.KaptchaIncorrectException; import com.baomidou.kaptcha.exception.KaptchaNotFoundException; import com.baomidou.kaptcha.exception.KaptchaTimeoutException; import org.springframework.web.bind.annotation.ExceptionHandler; import org.springframework.web.bind.annotation.RestControllerAdvice; @RestControllerAdvice public class GlobalExceptionHandler { @ExceptionHandler(value = KaptchaException.class) public String kaptchaExceptionHandler(KaptchaException kaptchaException) { if (kaptchaException instanceof KaptchaIncorrectException) { return \"验证码不正确\"; } else if (kaptchaException instanceof KaptchaNotFoundException) { return \"验证码未找到\"; } else if (kaptchaException instanceof KaptchaTimeoutException) { return \"验证码过期\"; } else { return \"验证码渲染失败\"; } } } 自定义验证码参数,以下为默认配置。 kaptcha: height: 50 width: 200 content: length: 4 source: abcdefghjklmnopqrstuvwxyz23456789 space: 2 font: color: black name: Arial size: 40 background-color: from: lightGray to: white border: enabled: true color: black thickness: 1 "},"plans/":{"url":"plans/","title":"历年计划","keywords":"","body":"历年计划 此目录下的为历年的计划流水，始于2019。 "},"plans/201901-big-plans-in-2019.html":{"url":"plans/201901-big-plans-in-2019.html","title":"2019","keywords":"","body":"Big Plans in 2019 健身，体重控制到65~70kg之间，并保持 : 控制在了74kg 写作，每月不少于2篇博客 : 未完成 英语，完成6个月的英语流利说，并拿回499奖学金 : 完成 阅读，每月至少阅读1本书 : 80% 考证，报名6月份PMI-ACP考证 : 完成 年底小结 时光荏苒，一去不返。年初的时候给自己定了一些目标，上半年志气高昂，虽幸苦但每天都有进步的快感，就像奇葩说里的选手杨奇函所说的，感觉自己每天都博学了一点。下半年把重心放到了家庭和健康方面，虽然疏于学识成长，却恰好印证了年初做计划的时候所说的“把那些变化当做必不可少的惊喜和点缀，这可能也是做人的一种情怀”。要学就学个踏实，要玩就玩个痛快。这算是2019年的收获吧. 八~十二月执行情况 疏于记录，不过还是基于回忆大致记录一下吧 健身，从室外健身改去健身房锻炼，体重控制在了净重74kg 写作，几近荒废，只是零零散散的记录了一些，不成文 英语，完成流利说，并拿回了奖学金，流利度L5 阅读，读了《道德经》和《了凡四训》 音频，听了一半喜马拉雅FM的《思维精进》，继续听中 亲子游，9月上海(成龙电影艺术馆|公元2050/2500未来生活体验馆|上海外滩星空艺术馆|「我做了一个红楼梦」剧幕式互动光影艺术展|NBA篮球乐园|上海野生动物园)，10月上旬千岛湖（灵栖洞|森林氧吧|千岛湖洲际酒店|天屿|中心湖区|东南湖区|桐庐鸬鹚度假村） 旅游，10月巽寮湾、厦门，11月邮轮至日本冲绳那霸 七月执行情况 健身，体重已经很久没关注，几乎要突破天际了，开始努力减肥吧 写作，上半年多看书，下半年多动笔吧，不如整理一下游记 阅读，进行中《瓦尔登湖》 六月执行情况 阅读，完成《反惯性思维》 考证，PMI-ACP，6月22日于浙江财经学院文三校区参加考试 五月执行情况 阅读，完成《高效能人士的七个习惯》 考证，看教学视频，按照考试大纲复习 四月执行情况 阅读，完成《敏捷估计与规划》 阅读，完成《致加西亚的信》 三月执行情况 阅读，完成《用户故事与敏捷方法》 阅读，完成《民主的细节》 阅读，完成《你一年的8760小时》 激活“英语流利说”180天课程 旅游：3月30日~4月7日 韩国首尔+济州岛两人自由行 当前体重78kg -> 悲 二月执行情况 阅读，完成《硝烟中的Scrum和XP》 阅读，完成《行走的人生》 当前体重75.9kg -> 三月不减肥，四月徒伤悲 一月执行情况 阅读，完成《轻松Scrum之旅》 当前体重75kg 计划与变化 尽量做正确的计划而不是做忙碌的计划。在正确计划的前提下，把那些变化当做必不可少的惊喜和点缀，这可能也是做人的一种情怀。 "}}